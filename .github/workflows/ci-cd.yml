# GitHub Action for Laravel with MySQL
name: CI/CD
on: [push, pull_request]
jobs:
  build-js:
    name: Build JS / CSS
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Get node.js cache directory
        id: node-cache-dir
        run: echo "::set-output name=dir::$(npm config get cache)" # Use $(yarn cache dir) for yarn

      - name: Cache NPM dependencies
        uses: actions/cache@v1
        with:
          path: ${{ steps.node-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }} # Use '**/yarn.lock' for yarn
          restore-keys: ${{ runner.os }}-node-

      - name: NPM Build
        run: |
          npm ci
          npm run production --no-progress
          cat public/mix-manifest.json # See asset versions in log

      - name: Upload build files
        uses: actions/upload-artifact@v1
        with:
          name: assets
          path: public
  test-php:
    name: Test PHP
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: homestead
          BUGSNAG_API_KEY: ${{ secrets.BUGSNAG_API_KEY }}
        ports:
          - 3306/tcp
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@v2 #https://github.com/shivammathur/setup-php
        with:
          php-version: 8.0
          extensions: mbstring, dom, fileinfo, mysql
          coverage: pcov #optional
          tools: phpcs, phpcpd

      - name: Start mysql service
        run: sudo /etc/init.d/mysql start

      - name: Get composer dev cache directory
        id: composer-dev-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache composer dependencies
        uses: actions/cache@v1
        with:
          path: ${{ steps.composer-dev-cache.outputs.dir }}
          # Use composer.json for key, if composer.lock is not committed.
          # key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run: composer install --no-progress --prefer-dist --optimize-autoloader
      - name: Prepare the application
        run: |
          php -r "file_exists('.env') || copy('.env.testing', '.env');"
          php artisan key:generate

      - name: Clear Config
        run: php artisan config:clear

      - name: Run Migration
        run: php artisan migrate -v
        env:
          DB_PORT: ${{ job.services.mysql.ports['3306'] }}

      - name: Test with phpunit
        run: vendor/bin/phpunit
        env:
          DB_PORT: ${{ job.services.mysql.ports['3306'] }}

      - name: PHP_CodeSniffer
        run: phpcs --extensions=php app

      - name: Copy/Paste Detector
        run: phpcpd app/ --min-lines=50

      - name: Enlightn Security Checker
        run: php vendor/enlightn/security-checker/security-checker security:check composer.lock
  deploy:
    name: Run Deployment
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/dev' || github.ref == 'refs/heads/feature/deployer'
    runs-on: ubuntu-latest
    needs: build-js
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Download JS / CSS Artifact
        uses: actions/download-artifact@v2
        with:
          name: assets
          path: public

      - name: Setup PHP, with composer
        uses: shivammathur/setup-php@v2 #https://github.com/shivammathur/setup-php
        with:
          php-version: 8.0
          extensions: mbstring

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache composer dependencies
        uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          # Use composer.json for key, if composer.lock is not committed.
          # key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run: composer install --no-progress --prefer-dist --optimize-autoloader --no-dev

      - name: Setup Deployer
        uses: atymic/deployer-php-action@master
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
          ssh-known-hosts: ${{ secrets.SSH_KNOWN_HOSTS }}

      - name: Run Deployment [Staging]
        if: github.ref == 'refs/heads/dev'
        run: dep deploy 104.248.84.152

      - name: Run Deployment test
        if: github.ref == 'refs/heads/feature/deployer'
        run: dep deploy 104.248.84.152 -v

      - name: Run Deployment [Production]
        if: github.ref == 'refs/heads/master'
        run: dep deploy vps1.dutchvacc.nl
